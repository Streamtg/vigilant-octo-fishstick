name: Simulate Real Engagement

on:
  workflow_dispatch:

jobs:
  simulate-engagement:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Puppeteer
        run: npm install puppeteer

      - name: Simulate engagement visit
        run: |
          cat > visit.js <<'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          const urls = [
            'https://yoelmod.blogspot.com/',
            'https://yoelmod.blogspot.com/p/index.html',
            'https://yoelmod.blogspot.com/search?q=educacion',
            'https://yoelmod.blogspot.com/search?q=contabilidad'
          ];

          const referers = [
            'https://facebook.com',
            'https://twitter.com',
            'https://linkedin.com',
            'https://google.com'
          ];

          const userAgents = [
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64)...',
            'Mozilla/5.0 (Linux; Android 9)...',
            'Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)...',
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)...'
          ];

          async function simulateVisit(url) {
            const browser = await puppeteer.launch({ headless: 'new', args: ['--no-sandbox'] });
            const page = await browser.newPage();

            await page.setUserAgent(userAgents[Math.floor(Math.random() * userAgents.length)]);
            await page.setViewport({ width: 375 + Math.floor(Math.random() * 800), height: 600 });

            await page.setExtraHTTPHeaders({ referer: referers[Math.floor(Math.random() * referers.length)] });

            try {
              await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 60000 });

              const delay = ms => new Promise(res => setTimeout(res, ms));
              await delay(8000 + Math.random() * 8000);

              for (let i = 0; i < 10; i++) {
                await page.evaluate(() => window.scrollBy(0, Math.random() * 500));
                await delay(700 + Math.random() * 1200);
              }

              // Simular clics
              const links = await page.$$eval('a[href^="https://yoelmod.blogspot.com"]', as => as.map(a => a.href));
              for (let i = 0; i < 8 + Math.floor(Math.random() * 4); i++) {
                if (links.length === 0) break;
                const next = links[Math.floor(Math.random() * links.length)];
                await page.goto(next, { waitUntil: 'domcontentloaded' });
                await delay(3000 + Math.random() * 4000);
              }

              // Simular "compartir" (visita a URL de redes sociales)
              const social = referers[Math.floor(Math.random() * referers.length)];
              await page.goto(social, { waitUntil: 'domcontentloaded' });
              await delay(5000);

            } catch (err) {
              console.error('Error visitando:', url, err.message);
            } finally {
              await browser.close();
            }
          }

          (async () => {
            const instance = parseInt(process.env.INSTANCE_ID || '0');
            const url = urls[instance % urls.length];
            await simulateVisit(url);
          })();
          EOF

          node visit.js
        env:
          INSTANCE_ID: ${{ matrix.instance }}
