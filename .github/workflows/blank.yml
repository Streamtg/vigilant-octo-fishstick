name: Telegram FileStreamBot WebUI + Ngrok

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    env:
      API_ID: ${{ secrets.API_ID }}
      API_HASH: ${{ secrets.API_HASH }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      BIN_CHANNEL: ${{ secrets.BIN_CHANNEL }}
      PORT: 8080
      FQDN: ${{ secrets.FQDN }}

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Instalar dependencias del sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv curl git

      - name: Clonar TG-FileStreamBot (rama v2.1) y preparar entorno
        run: |
          git clone --branch v2.1 https://github.com/EverythingSuckz/TG-FileStreamBot.git
          cd TG-FileStreamBot
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Aplicar parches manuales con echo
        run: |
          cd TG-FileStreamBot

          # Reescribir WebStreamer/bot/__init__.py para cambiar session_name por name
          grep -q 'session_name' WebStreamer/bot/__init__.py && \
          sed 's/session_name=/name=/g' WebStreamer/bot/__init__.py > WebStreamer/bot/__init__.py.tmp && \
          mv WebStreamer/bot/__init__.py.tmp WebStreamer/bot/__init__.py || echo "No change needed for session_name"

          # Cambiar message.message_id por message.id en stream.py
          grep -q 'message.message_id' WebStreamer/bot/plugins/stream.py && \
          sed 's/message.message_id/message.id/g' WebStreamer/bot/plugins/stream.py > WebStreamer/bot/plugins/stream.py.tmp && \
          mv WebStreamer/bot/plugins/stream.py.tmp WebStreamer/bot/plugins/stream.py || echo "No change needed for message_id 1"

          grep -q 'log_msg.message_id' WebStreamer/bot/plugins/stream.py && \
          sed 's/log_msg.message_id/log_msg.id/g' WebStreamer/bot/plugins/stream.py > WebStreamer/bot/plugins/stream.py.tmp && \
          mv WebStreamer/bot/plugins/stream.py.tmp WebStreamer/bot/plugins/stream.py || echo "No change needed for message_id 2"

          # Sobrescribir get_unique_id para corregir error variable no definida
          echo 'def get_unique_id(media_msg) -> str:
    for attr in (
        "audio",
        "document",
        "photo",
        "sticker",
        "animation",
        "video",
        "voice",
        "video_note",
    ):
        try:
            file_obj = getattr(media_msg, attr)
            if file_obj and getattr(file_obj, "file_unique_id", None):
                return file_obj.file_unique_id[:6]
        except AttributeError:
            continue
    return "abcdef"
' > WebStreamer/utils/file_id.py

      - name: Instalar y configurar Ngrok
        run: |
          curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt-get update && sudo apt-get install -y ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Iniciar Ngrok
        run: |
          nohup ngrok http $PORT &

      - name: Ejecutar el bot WebStreamer
        run: |
          cd TG-FileStreamBot
          . venv/bin/activate
          python3 -m WebStreamer
