name: Deploy TG-FileStreamBot (Telethon-V2.0-Dead) with Ngrok

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Ejecutar cada 6 horas

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      API_ID: ${{ secrets.API_ID }}
      API_HASH: ${{ secrets.API_HASH }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      DATABASE_URI: ${{ secrets.DATABASE_URI }}
      BIN_CHANNEL: ${{ secrets.BIN_CHANNEL }}
      PORT: ${{ secrets.PORT }}
      BASE_URL: ${{ secrets.BASE_URL }}
      FQDN: ready-unlikely-osprey.ngrok-free.app
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    steps:
    - name: Clonar repositorio desde rama Telethon-V2.0-Dead
      run: |
        git clone --single-branch --branch Telethon-V2.0-Dead https://github.com/DeekshithSH/TG-FileStreamBot.git

    - name: Instalar Python y entorno virtual
      run: |
        sudo apt update
        sudo apt install python3 python3-pip python3-venv -y

    - name: Crear entorno virtual e instalar dependencias
      working-directory: TG-FileStreamBot
      run: |
        python3 -m venv venv
        ./venv/bin/pip install --upgrade pip
        ./venv/bin/pip install -r requirements.txt

    - name: Instalar Ngrok
      run: |
        curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok -y

    - name: Configurar Ngrok
      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Iniciar tÃºnel Ngrok
      run: |
        nohup ngrok http --domain=ready-unlikely-osprey.ngrok-free.app $PORT > ngrok.log 2>&1 &
        sleep 5

    - name: Ejecutar TG-FileStreamBot
      working-directory: TG-FileStreamBot
      run: |
        export OWNER_ID=834554042
        ./venv/bin/python3 -m WebStreamer
