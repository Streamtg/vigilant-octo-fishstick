name: TG-FileStreamBot v2.0 Deployment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Reinicio cada 6 horas

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 horas

    env:
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Clone TG-FileStreamBot (Old-v2.0)
      run: |
        git clone -b Old-v2.0 https://github.com/DeekshithSH/TG-FileStreamBot.git
        cd TG-FileStreamBot
        sudo apt update
        sudo apt install -y python3-virtualenv
        virtualenv -p /usr/bin/python3 venv
        . ./venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: |
        echo "API_ID=${{ secrets.API_ID }}" >> $GITHUB_ENV
        echo "API_HASH=${{ secrets.API_HASH }}" >> $GITHUB_ENV
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> $GITHUB_ENV
        echo "OWNER_ID=${{ secrets.OWNER_ID }}" >> $GITHUB_ENV
        echo "PORT=8080" >> $GITHUB_ENV
        echo "FQDN=${{ secrets.FQDN }}" >> $GITHUB_ENV
        echo "PUBLIC_URL=${{ secrets.FQDN }}" >> $GITHUB_ENV
        echo "::notice:: Secrets cargados correctamente (FQDN, API_ID, BOT_TOKEN...)"

    - name: Install and Start Ngrok
      run: |
        curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc \
        | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" \
        | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install -y ngrok
        ngrok config add-authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
        nohup ngrok http 8080 --domain=ready-unlikely-osprey.ngrok-free.app > ngrok.log 2>&1 &

    - name: Launch TG-FileStreamBot
      run: |
        cd TG-FileStreamBot
        . ./venv/bin/activate
        echo "::group::Iniciando WebStreamer"
        echo "FQDN: $FQDN"
        nohup python3 -m WebStreamer > bot.log 2>&1 &
        echo "::endgroup:: Bot ejecut√°ndose en segundo plano."
