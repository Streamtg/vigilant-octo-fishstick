name: Deploy Micky Streamer Bot with Ngrok

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositorio del bot
        run: |
          git clone https://github.com/MrGhostsx/Micky-Streamer-Bot-2.0.git

      - name: Instalar dependencias del sistema
        run: |
          sudo apt update
          sudo apt install -y python3-pip unzip curl

      - name: Instalar dependencias del bot
        run: |
          pip3 install -U -r Micky-Streamer-Bot-2.0/requirements.txt

      - name: Crear archivo info.py con los secrets
        working-directory: ./Micky-Streamer-Bot-2.0
        run: |
          echo "ADMINS = '${{ secrets.ADMINS }}'" > info.py
          echo "API_HASH = '${{ secrets.API_HASH }}'" >> info.py
          echo "API_ID = ${{ secrets.API_ID }}" >> info.py
          echo "AUTH_CHANNEL = '${{ secrets.AUTH_CHANNEL }}'" >> info.py
          echo "BIN_CHANNEL = '${{ secrets.BIN_CHANNEL }}'" >> info.py
          echo "BOT_TOKEN = '${{ secrets.BOT_TOKEN }}'" >> info.py
          echo "BOT_USERNAME = '${{ secrets.BOT_USERNAME }}'" >> info.py
          echo "DATABASE_NAME = '${{ secrets.DATABASE_NAME }}'" >> info.py
          echo "DATABASE_URI = '${{ secrets.DATABASE_URI }}'" >> info.py
          echo "FQDN = '${{ secrets.FQDN }}'" >> info.py
          echo "LOG_CHANNEL = '${{ secrets.LOG_CHANNEL }}'" >> info.py
          echo "OWNER_USERNAME = '${{ secrets.OWNER_USERNAME }}'" >> info.py
          echo "PORT = int('${{ secrets.PORT }}')" >> info.py
          echo "SESSION = '${{ secrets.SESSION }}'" >> info.py

      - name: Parchear bot.py para definir ON_HEROKU = False
        working-directory: ./Micky-Streamer-Bot-2.0
        run: |
          sed -i '/^import /a ON_HEROKU = False' bot.py

      - name: Parchear bot.py para manejar error de LOG_CHANNEL con awk
        working-directory: ./Micky-Streamer-Bot-2.0
        run: |
          awk '
            /await Webtsbot.send_message\(LOG_CHANNEL/ {
              print "        if LOG_CHANNEL:"; 
              print "            try:"; 
              print "                await Webtsbot.send_message(LOG_CHANNEL, text=script.RESTART_TXT.format(today, time))"; 
              print "            except Exception as e:"; 
              print "                print(f\"[⚠️ LOG_CHANNEL error] No se pudo enviar mensaje al canal: {e}\")"; 
              next 
            } 
            { print }
          ' bot.py > bot.tmp && mv bot.tmp bot.py

      - name: Instalar Ngrok
        run: |
          curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok -y

      - name: Configurar Ngrok
        run: |
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Iniciar Ngrok en segundo plano
        run: |
          ngrok http --domain=ready-unlikely-osprey.ngrok-free.app ${{ secrets.PORT }} > ngrok.log &
          sleep 5

      - name: Ejecutar el bot en primer plano
        working-directory: ./Micky-Streamer-Bot-2.0
        run: |
          python3 bot.py
