name: Humanized Blog Visits

on: schedule: - cron: '*/20 * * * *' workflow_dispatch:

jobs: visit: runs-on: ubuntu-latest strategy: matrix: instance: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216] steps: - name: Checkout repo uses: actions/checkout@v3

- name: Setup Node
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies
    run: npm install puppeteer axios

  - name: Run visitor script
    run: |
      cat > visit.js <<'EOF'
      const puppeteer = require('puppeteer');
      const axios = require('axios');
      const devices = require('puppeteer/DeviceDescriptors');

      const socialReferers = [
        'https://www.facebook.com/',
        'https://twitter.com/',
        'https://www.instagram.com/',
        'https://www.pinterest.com/',
        'https://www.reddit.com/',
        'https://www.linkedin.com/',
        'https://t.co/',
        'https://l.instagram.com/'
      ];

      function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
      }

      async function getUrlsFromSitemap() {
        const res = await axios.get('https://yoelmod.blogspot.com/sitemap.xml');
        const matches = res.data.match(/<loc>(.*?)<\/loc>/g);
        return matches ? matches.map(x => x.replace(/<\/?loc>/g, '')) : [];
      }

      async function simulateScroll(page) {
        for (let i = 0; i < 15; i++) {
          await page.evaluate(() => {
            window.scrollBy(0, Math.random() * 400 - 100);
          });
          await sleep(800 + Math.random() * 1200);
        }
      }

      (async () => {
        const urls = await getUrlsFromSitemap();
        const deviceNames = ['iPhone X', 'Pixel 2', 'iPad Pro', 'Galaxy S5'];
        const device = devices[deviceNames[Math.floor(Math.random() * deviceNames.length)]];
        const referer = socialReferers[Math.floor(Math.random() * socialReferers.length)];
        const url = urls[Math.floor(Math.random() * urls.length)];

        const browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();
        await page.setUserAgent(device.userAgent);
        await page.setViewport(device.viewport);
        await page.setExtraHTTPHeaders({ referer });

        await page.emulate(device);
        await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 60000 });

        await simulateScroll(page);

        const title = await page.title();
        console.log('Visited:', url, 'Title:', title);

        await sleep(20000 + Math.random() * 70000);
        await browser.close();
      })();
      EOF

      node visit.js

