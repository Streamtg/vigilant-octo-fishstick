name: Simulate Real Visitor with Playwright

on:
  schedule:
    - cron: '0 */12 * * *'  # Cada 12 horas
  workflow_dispatch:

jobs:
  simulate-visitor:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 50
      fail-fast: false
      matrix:
        session: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                  11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                  21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                  41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
                  51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
                  61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
                  71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
                  81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
                  91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
                  101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
                  111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
                  121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
                  131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
                  141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
                  151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
                  161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
                  171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
                  181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
                  191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
                  201, 202, 203, 204, 205, 206, 207, 208, 209, 210]

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Playwright and dependencies
        run: |
          npm init -y
          npm install playwright
          npx playwright install --with-deps

      - name: Create simulate.js
        run: |
          cat <<'EOF' > simulate.js
          const { chromium, firefox, webkit } = require('playwright');

          const userAgents = [
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64)...',
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)...'
          ];

          const referers = [
            'https://facebook.com',
            'https://twitter.com',
            'https://l.instagram.com',
            'https://reddit.com'
          ];

          const targetURL = 'https://yoelmod.blogspot.com/2022/05/netflix-premium-free-mod-apk.html';

          (async () => {
            const browserTypes = [chromium, firefox, webkit];
            const browserType = browserTypes[Math.floor(Math.random() * browserTypes.length)];

            const browser = await browserType.launch({ headless: true });

            const context = await browser.newContext({
              viewport: { width: 1366, height: 768 },
              userAgent: userAgents[Math.floor(Math.random() * userAgents.length)],
              locale: 'en-US'
            });

            const page = await context.newPage();
            const referer = referers[Math.floor(Math.random() * referers.length)];

            try {
              await page.goto(referer, { waitUntil: 'domcontentloaded' });
              await page.evaluate((url) => {
                setTimeout(() => { window.location.href = url; }, 3000);
              }, targetURL);

              await page.waitForNavigation({ waitUntil: 'load', timeout: 60000 });

              for (let i = 0; i < 5; i++) {
                await page.mouse.move(Math.random() * 1300, Math.random() * 700);
                await page.mouse.wheel(0, 500);
                await page.waitForTimeout(Math.floor(Math.random() * 3000) + 1000);
              }

              const links = await page.$$eval('a', anchors =>
                anchors
                  .filter(a => a.href.includes('yoelmod.blogspot.com'))
                  .map(a => a.href)
              );

              if (links.length > 0) {
                const randomLink = links[Math.floor(Math.random() * links.length)];
                await page.goto(randomLink, { waitUntil: 'load' });
                await page.waitForTimeout(10000);
              }
            } catch (err) {
              console.error("Error:", err);
            } finally {
              await browser.close();
            }
          })();
          EOF

      - name: Run simulation
        run: node simulate.js
