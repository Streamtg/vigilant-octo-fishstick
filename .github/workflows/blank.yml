name: Visit Rumble Video with Real Browser - 216 Iteraciones

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # Cada hora

jobs:
  visit-video:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install puppeteer
        run: npm install puppeteer

      - name: Create visitVideo.js
        run: |
          cat << 'EOF' > visitVideo.js
          const puppeteer = require('puppeteer');

          (async () => {
            const url = 'https://rumble.com/v41bpuq-school-march-festival.html';

            const browser = await puppeteer.launch({
              headless: false, // Navegador visible (real)
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });

            const page = await browser.newPage();
            await page.setViewport({ width: 1280, height: 800 });

            try {
              await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 90000 });

              for (let i = 0; i < 216; i++) {
                try {
                  // Esperar a que el iframe del reproductor esté cargado
                  const frames = page.frames();
                  const playerFrame = frames.find(f => f.url().includes("rumble.com/embed"));
                  
                  if (playerFrame) {
                    const playButton = await playerFrame.waitForSelector('button[aria-label="Play"]', { visible: true, timeout: 10000 });
                    await playButton.click();
                    console.log(`Reproducción ${i + 1} iniciada.`);
                  } else {
                    console.log("No se encontró el iframe del reproductor.");
                  }

                  // Esperar 6-8 segundos aleatoriamente
                  await new Promise(r => setTimeout(r, 6000 + Math.random() * 2000));
                } catch (error) {
                  console.error(`Error en la iteración ${i + 1}:`, error.message);
                }
              }
            } catch (err) {
              console.error("Error general:", err.message);
            }

            await browser.close();
          })();
          EOF

      - name: Ejecutar script de visita
        run: node visitVideo.js
