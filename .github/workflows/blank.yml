name: TG-FileStream Deployment (Fixed)

on:
  schedule:
    - cron: '0 */6 * * *'  # Auto-restart every 6 hours
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    env:
      API_ID: ${{ secrets.API_ID }}
      API_HASH: ${{ secrets.API_HASH }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      BIN_CHANNEL: ${{ secrets.BIN_CHANNEL }}  # ✅ Añadido aquí
      LOG_CHANNEL: ${{ secrets.LOG_CHANNEL }}
      PORT: ${{ secrets.PORT || '8080' }}
      HOST: ${{ secrets.HOST }}
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      PUBLIC_URL: ${{ secrets.PUBLIC_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          git clone https://github.com/DeekshithSH/TG-FileStream.git
          cd TG-FileStream
          pip install -r requirements.txt

      - name: Configure environment
        run: |
          echo "BIN_CHANNEL=$BIN_CHANNEL" >> $GITHUB_ENV  # ✅ Pasar a entorno
          echo "HOST=$HOST" >> $GITHUB_ENV
          echo "PORT=$PORT" >> $GITHUB_ENV
          echo "PUBLIC_URL=$PUBLIC_URL" >> $GITHUB_ENV

      - name: Install Ngrok
        run: |
          sudo apt update
          sudo apt install -y jq wget unzip
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip
          unzip ngrok-v3-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin/
          ngrok --version

      - name: Start Ngrok tunnel
        run: |
          ngrok config add-authtoken "$NGROK_AUTH_TOKEN"
          nohup ngrok http "$PORT" --log=stdout > ngrok.log &
          sleep 10
          NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "::notice:: Ngrok URL: $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      - name: Launch FileStream Bot
        run: |
          cd TG-FileStream
          echo "Starting bot with configuration:"
          echo "BIN_CHANNEL: $BIN_CHANNEL"
          echo "HOST: $HOST"
          echo "PORT: $PORT"
          nohup python3 -m tgfs > bot.log 2>&1 &
          sleep 21500  # ~6 hours
