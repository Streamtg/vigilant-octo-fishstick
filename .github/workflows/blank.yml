name: Visit Rumble Video - Stealth Mode

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  visit-video:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Puppeteer Stealth
        run: |
          npm install puppeteer puppeteer-extra puppeteer-extra-plugin-stealth

      - name: Create visitVideo.js
        run: |
          cat << 'EOF' > visitVideo.js
          const puppeteer = require('puppeteer-extra');
          const StealthPlugin = require('puppeteer-extra-plugin-stealth');
          puppeteer.use(StealthPlugin());

          (async () => {
            const url = 'https://rumble.com/v41bpuq-school-march-festival.html';
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });

            const page = await browser.newPage();
            await page.setViewport({ width: 1280, height: 800 });

            for (let i = 0; i < 216; i++) {
              try {
                await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 60000 });

                // Esperar botón de play
                const playButton = await page.waitForSelector('button[aria-label="Play"]', { visible: true, timeout: 15000 });
                await playButton.click();

                console.log(`▶️ Reproducción ${i + 1} iniciada.`);
                await new Promise(r => setTimeout(r, 8000 + Math.random() * 3000));
              } catch (e) {
                console.error(`❌ Error en iteración ${i + 1}: ${e.message}`);
              }
            }

            await browser.close();
          })();
          EOF

      - name: Ejecutar script de visita
        run: node visitVideo.js
