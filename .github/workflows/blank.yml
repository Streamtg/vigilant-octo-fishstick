name: 📦 Run FileStreamBot with .env

on:
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v4

      - name: 📥 Asegurar clonación si no existe
        run: |
          if [ ! -d FileStreamBot ]; then
            git clone https://github.com/avipatilpro/FileStreamBot.git
          fi

      - name: 🐍 Preparar entorno Python
        run: |
          python3 -m venv FileStreamBot/venv
          source FileStreamBot/venv/bin/activate
          pip install --upgrade pip
          pip install -r FileStreamBot/requirements.txt

      - name: 🔐 Crear archivo .env usando Secrets
        working-directory: ./FileStreamBot
        run: |
          if [ -z "${{ secrets.OWNER_ID }}" ] || [ -z "${{ secrets.API_ID }}" ] || [ -z "${{ secrets.API_HASH }}" ] || [ -z "${{ secrets.BOT_TOKEN }}" ]; then
            echo "❌ Faltan secretos: OWNER_ID, API_ID, API_HASH y BOT_TOKEN"
            exit 1
          fi

          cat > .env <<EOF
          OWNER_ID=${{ secrets.OWNER_ID }}
          API_ID=${{ secrets.API_ID }}
          API_HASH=${{ secrets.API_HASH }}
          BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          CHANNEL_ID=${{ secrets.CHANNEL_ID }}
          PORT=${{ secrets.PORT }}
          BASE_URL=${{ secrets.BASE_URL }}
          EOF

          echo "✅ Archivo .env generado correctamente."

      - name: 🚀 Ejecutar FileStreamBot
        working-directory: ./FileStreamBot
        run: |
          source venv/bin/activate
          python3 -m FileStream
