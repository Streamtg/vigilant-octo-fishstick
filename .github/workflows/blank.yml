name: Go Build and Test with Ngrok Setup

on:
  schedule:
    - cron: '0 */6 * * *' # Ejecutar cada 6 horas
  workflow_dispatch: # Permitir disparar manualmente el flujo de trabajo

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        go: [1.23.4]
        flag: [A]
    timeout-minutes: 360
    env:
      API_ID: ${{ secrets.API_ID }}
      API_HASH: ${{ secrets.API_HASH }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      LOG_CHANNEL: ${{ secrets.LOG_CHANNEL }}
      PORT: ${{ secrets.PORT }}
      HOST: ${{ secrets.HOST }}
      NUM_JOBS: 900
      JOB: ${{ matrix.go }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Go
      run: |
        wget https://go.dev/dl/go${{ matrix.go }}.linux-amd64.tar.gz
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf go${{ matrix.go }}.linux-amd64.tar.gz
        echo "export PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV

    - name: Verify Go installation
      run: go version

    - name: Clone and build TG-FileStreamBot
      run: |
        git clone https://github.com/mshafiee/webbridgebot.git
        cd webbridgebot
        go build -o webBridgeBot
        chmod +x webBridgeBot

    - name: Run TG-FileStreamBot
      run: |
        cd TG-FileStreamBot
        ./fsb run & # Ejecuta el proceso en segundo plano

    - name: Install Ngrok
      run: |
        curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc \
        | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null \
        && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" \
        | sudo tee /etc/apt/sources.list.d/ngrok.list \
        && sudo apt update \
        && sudo apt install ngrok

    - name: Configure Ngrok
      run: |
        ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Start Ngrok HTTP with custom URL
      run: |
        ngrok http --url=ready-unlikely-osprey.ngrok-free.app 8080
