name: Telegram FileStreamBot WebUI + Ngrok

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      API_ID: ${{ secrets.API_ID }}
      API_HASH: ${{ secrets.API_HASH }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      BIN_CHANNEL: ${{ secrets.BIN_CHANNEL }}
      PORT: 8080
      FQDN: ${{ secrets.FQDN }}

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Instalar dependencias
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv curl git

      - name: Clonar TG-FileStreamBot (v2.1)
        run: |
          git clone --branch v2.1 https://github.com/EverythingSuckz/TG-FileStreamBot.git
          cd TG-FileStreamBot
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Parchear __init__.py (Pyrogram 2.x compatible)
        run: |
          echo "from pyrogram import Client" > TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "from WebStreamer.vars import Var" >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "" >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "StreamBot = Client(" >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "    name='WebStreamer'," >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "    api_id=Var.API_ID," >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "    api_hash=Var.API_HASH," >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "    bot_token=Var.BOT_TOKEN," >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "    workers=Var.WORKERS," >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo "    sleep_threshold=Var.SLEEP_THRESHOLD" >> TG-FileStreamBot/WebStreamer/bot/__init__.py
          echo ")" >> TG-FileStreamBot/WebStreamer/bot/__init__.py

      - name: Corregir clients.py (mock de multi_clients y work_loads)
        run: |
          echo "from WebStreamer.bot import StreamBot" > TG-FileStreamBot/WebStreamer/bot/clients.py
          echo "multi_clients = StreamBot" >> TG-FileStreamBot/WebStreamer/bot/clients.py
          echo "work_loads = None" >> TG-FileStreamBot/WebStreamer/bot/clients.py
          echo "initialize_clients = StreamBot" >> TG-FileStreamBot/WebStreamer/bot/clients.py

      - name: Corregir stream.py y funciÃ³n get_unique_id
        run: |
          sed -i 's/message\.message_id/message.id/g' TG-FileStreamBot/WebStreamer/bot/plugins/stream.py || true
          sed -i 's/log_msg\.message_id/log_msg.id/g' TG-FileStreamBot/WebStreamer/bot/plugins/stream.py || true
          echo "from pyrogram.types import Message" > TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "def get_unique_id(message: Message) -> str:" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "    attrd = None" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "    if message.photo: attrd = message.photo.file_unique_id" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "    elif message.video: attrd = message.video.file_unique_id" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "    elif message.document: attrd = message.document.file_unique_id" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "    elif message.audio: attrd = message.audio.file_unique_id" >> TG-FileStreamBot/WebStreamer/utils/file_id.py
          echo "    return attrd[:6] if attrd else '000000'" >> TG-FileStreamBot/WebStreamer/utils/file_id.py

      - name: Instalar y configurar Ngrok
        run: |
          curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt-get update && sudo apt-get install -y ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Iniciar Ngrok
        run: |
          nohup ngrok http 8080 &

      - name: Ejecutar el bot WebStreamer
        run: |
          cd TG-FileStreamBot
          . venv/bin/activate
          python3 -m WebStreamer
