name: TG-FileStreamBot Python + Ngrok

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    env:
      API_ID: ${{ secrets.API_ID }}
      API_HASH: ${{ secrets.API_HASH }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      BIN_CHANNEL: ${{ secrets.BIN_CHANNEL }}
      PORT: ${{ secrets.PORT }}
      FQDN: ${{ secrets.FQDN }}
      HOST: 0.0.0.0
      PYTHONUNBUFFERED: 1

    steps:
    - name: Clonar TG-FileStreamBot
      run: git clone https://github.com/EverythingSuckz/TG-FileStreamBot

    - name: Crear entorno virtual e instalar dependencias
      working-directory: TG-FileStreamBot
      run: |
        python3 -m venv venv
        . ./venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Instalar Ngrok
      run: |
        curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok

    - name: Configurar Ngrok token
      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Iniciar tÃºnel Ngrok con subdominio fijo
      run: nohup ngrok http --domain=${{ secrets.FQDN }} ${{ secrets.PORT }} > ngrok.log &

    - name: Ejecutar FileStreamBot
      working-directory: TG-FileStreamBot
      run: |
        . ./venv/bin/activate
        nohup python3 -m WebStreamer > bot.log 2>&1 &
        sleep 10
        tail -n 20 bot.log
