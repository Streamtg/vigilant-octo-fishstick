name: TG-FileStreamBot v2.0 Deployment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Reinicio cada 6 horas

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone TG-FileStreamBot (Old-v2.0)
        run: |
          git clone -b Old-v2.0 https://github.com/DeekshithSH/TG-FileStreamBot.git
          sudo apt update
          sudo apt install -y python3-virtualenv
          cd TG-FileStreamBot
          virtualenv -p python3 venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate config.py dynamically
        run: |
          cd TG-FileStreamBot/WebStreamer
          echo 'class Var:' > config.py
          echo "    API_ID = int('${{ secrets.API_ID }}')" >> config.py
          echo "    API_HASH = '${{ secrets.API_HASH }}'" >> config.py
          echo "    BOT_TOKEN = '${{ secrets.BOT_TOKEN }}'" >> config.py
          echo "    OWNER_ID = int('${{ secrets.OWNER_ID }}')" >> config.py
          echo "    BIN_CHANNEL = int('${{ secrets.BIN_CHANNEL }}')" >> config.py
          echo "    PORT = 8080" >> config.py
          echo "    FQDN = '${{ secrets.FQDN }}'" >> config.py
          echo "    PUBLIC_URL = '${{ secrets.FQDN }}'" >> config.py
          echo "    DATABASE_URL = '${{ secrets.DATABASE_URL || '' }}'" >> config.py
          echo "    UPDATES_CHANNEL = ''" >> config.py
          echo "    BANNED_USERS = []" >> config.py
          echo "    PROTECT_CONTENT = False" >> config.py
          echo "    CUSTOM_CAPTION = None" >> config.py

      - name: Override vars.py to import from config.py
        run: |
          echo 'from .config import Var' > TG-FileStreamBot/WebStreamer/vars.py

      - name: Install Ngrok
        run: |
          curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install -y ngrok

      - name: Configure Ngrok
        run: |
          ngrok config add-authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"

      - name: Launch Bot and Ngrok
        run: |
          cd TG-FileStreamBot
          . venv/bin/activate
          echo "::group::Iniciando WebStreamer en segundo plano"
          nohup python3 -m WebStreamer > bot.log 2>&1 &
          echo "::endgroup::"
          sleep 5
          echo "::group::Iniciando Ngrok con dominio reservado"
          ngrok http 8080 --domain=ready-unlikely-osprey.ngrok-free.app
