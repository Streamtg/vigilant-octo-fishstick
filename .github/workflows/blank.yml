name: Simulate Real Visitor with Device Emulation

on:
  schedule:
    - cron: '0 */12 * * *'  # Ejecutar cada 12 horas
  workflow_dispatch:       # Permite ejecución manual

jobs:
  simulate-visitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        go: [1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.1, 2.2]
        flag: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, Ñ, O, P, Q]
        device: [Desktop Chrome, iPhone 12, Pixel 5, Galaxy S9+, iPad Mini]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Playwright and browsers
        run: |
          npm install playwright
          npx playwright install --with-deps

      - name: Simulate Visit with Device Emulation
        env:
          DEVICE: ${{ matrix.device }}
        run: |
          node -e "
          const { chromium, devices } = require('playwright');
          (async () => {
            const deviceMap = {
              'Desktop Chrome': {},
              'iPhone 12': devices['iPhone 12'],
              'Pixel 5': devices['Pixel 5'],
              'Galaxy S9+': devices['Galaxy S9+'],
              'iPad Mini': devices['iPad Mini']
            };
            const deviceName = process.env.DEVICE || 'Desktop Chrome';
            const browser = await chromium.launch({ headless: true });
            const context = await browser.newContext(deviceMap[deviceName]);
            const page = await context.newPage();
            await page.goto('https://yoelmod.blogspot.com/2022/05/netflix-premium-free-mod-apk.html', { waitUntil: 'networkidle' });
            
            const minTime = 60000; // 60 segundos
            const maxTime = 90000; // 90 segundos
            const duration = Math.floor(Math.random() * (maxTime - minTime)) + minTime;
            const start = Date.now();

            while (Date.now() - start < duration) {
              await page.mouse.wheel(0, Math.floor(Math.random() * 400));
              await page.waitForTimeout(3000);
            }

            // Opcional: visitar enlace aleatorio externo, excepto blogger
            const links = await page.$$eval('a', as => as.map(a => a.href).filter(href => href.startsWith('http') && !href.includes('blogger')));
            if (links.length > 0) {
              const link = links[Math.floor(Math.random() * links.length)];
              await page.goto(link, { waitUntil: 'domcontentloaded' });
              await page.waitForTimeout(Math.floor(Math.random() * 10000) + 5000);
            }

            await browser.close();
          })();
          "
